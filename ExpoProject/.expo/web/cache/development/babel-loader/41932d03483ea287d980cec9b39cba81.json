{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styles from \"./stylesHome\";\nimport info from \"../database/info.json\";\nimport { SearchBars } from \"../components/SearchBars\";\nimport { Card } from \"../components/Card\";\nexport var Home = function Home(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(info),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recetario = _useState4[0],\n      setRecetario = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Trending = _useState6[0],\n      Render = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Recent = _useState8[0],\n      RenderR = _useState8[1];\n\n  var addRecent = function addRecent(receta) {\n    setRecetario(receta);\n    var tempR = recetario == null ? void 0 : recetario.map(function (receta, index) {\n      return React.createElement(Card, {\n        key: \"info-\" + index,\n        receta: receta,\n        onClick: onSelectedRecipe\n      });\n    });\n    RenderR(tempR);\n  };\n\n  var onSelectedRecipe = function onSelectedRecipe(receta) {\n    addRecent(receta);\n    navigation.navigate(\"IngredientesScreen\", receta);\n  };\n\n  useEffect(function () {\n    var temp = recetario == null ? void 0 : recetario.map(function (receta, index) {\n      return React.createElement(Card, {\n        key: \"info-\" + index,\n        receta: receta,\n        onClick: onSelectedRecipe\n      });\n    });\n    Render(temp);\n  }, [state]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(SearchBars, {\n    style: styles.SearchBar\n  }), React.createElement(ScrollView, null, React.createElement(Text, {\n    style: styles.title\n  }, \" Trending\"), React.createElement(ScrollView, {\n    horizontal: true\n  }, Trending), React.createElement(Text, {\n    style: styles.title\n  }, \" Recent\"), React.createElement(ScrollView, {\n    horizontal: true\n  }, Recent)));\n};","map":{"version":3,"sources":["C:/Users/thisi/Documents/Kat3/kata-03-recetario-k3-n21-t5/ExpoProject/src/screens/Home.js"],"names":["React","useState","useEffect","styles","info","SearchBars","Card","Home","props","navigation","state","setState","recetario","setRecetario","Trending","Render","Recent","RenderR","addRecent","receta","tempR","map","index","onSelectedRecipe","navigate","temp","container","SearchBar","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,SAASC,IAAT;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAC7B,MAAOC,UAAP,GAAqBD,KAArB,CAAOC,UAAP;;AACA,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCV,QAAQ,CAACG,IAAD,CAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA2BZ,QAAQ,CAAC,IAAD,CAAnC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,MAAjB;;AACA,mBAA0Bd,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAeC,OAAf;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAW;AAC3BN,IAAAA,YAAY,CAACM,MAAD,CAAZ;AACA,QAAMC,KAAK,GAAGR,SAAH,oBAAGA,SAAS,CAAES,GAAX,CAAe,UAACF,MAAD,EAASG,KAAT,EAAiB;AAC5C,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,YAAUA,KAAnB;AAA4B,QAAA,MAAM,EAAEH,MAApC;AAA4C,QAAA,OAAO,EAAEI;AAArD,QAAP;AACD,KAFa,CAAd;AAGAN,IAAAA,OAAO,CAACG,KAAD,CAAP;AACD,GAND;;AAQA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,MAAD,EAAW;AAClCD,IAAAA,SAAS,CAACC,MAAD,CAAT;AACAV,IAAAA,UAAU,CAACe,QAAX,CAAoB,oBAApB,EAA0CL,MAA1C;AACD,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAMuB,IAAI,GAAGb,SAAH,oBAAGA,SAAS,CAAES,GAAX,CAAe,UAACF,MAAD,EAASG,KAAT,EAC5B;AACE,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,YAAUA,KAAnB;AAA4B,QAAA,MAAM,EAAEH,MAApC;AAA4C,QAAA,OAAO,EAAEI;AAArD,QAAP;AACD,KAHY,CAAb;AAIAR,IAAAA,MAAM,CAACU,IAAD,CAAN;AACD,GANQ,EAMP,CAACf,KAAD,CANO,CAAT;AAQA,SACE,oBAAC,YAAD;AAAe,IAAA,KAAK,EAAEP,MAAM,CAACuB;AAA7B,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEvB,MAAM,CAACwB;AAA1B,IADF,EAEE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB;AAApB,iBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,UAAU;AAAtB,KAAwBd,QAAxB,CAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACyB;AAApB,eAHF,EAIE,oBAAC,UAAD;AAAY,IAAA,UAAU;AAAtB,KAAwBZ,MAAxB,CAJF,CAFF,CADF;AAWD,CAvCM","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Text, SafeAreaView, ScrollView } from \"react-native\";\r\nimport styles from \"./stylesHome\";\r\nimport info from \"../database/info.json\";\r\nimport { SearchBars } from \"../components/SearchBars\";\r\nimport { Card } from \"../components/Card\";\r\n\r\nexport const Home = (props) => {\r\n  const {navigation} = props\r\n  const [state, setState] = useState('')\r\n  const [recetario, setRecetario] = useState(info)\r\n  const [Trending, Render] = useState(null)\r\n  const [Recent, RenderR] = useState(null)\r\n\r\n  const addRecent = (receta) =>{\r\n    setRecetario(receta)\r\n    const tempR = recetario?.map((receta, index)=>{\r\n      return <Card key={`info-${index}`} receta={receta} onClick={onSelectedRecipe}/>\r\n    })\r\n    RenderR(tempR)\r\n  }\r\n\r\n  const onSelectedRecipe = (receta) =>{\r\n    addRecent(receta)\r\n    navigation.navigate(\"IngredientesScreen\", receta)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const temp = recetario?.map((receta, index)=>\r\n    {\r\n      return <Card key={`info-${index}`} receta={receta} onClick={onSelectedRecipe}/>\r\n    })\r\n    Render(temp)\r\n  },[state])\r\n\r\n  return (\r\n    <SafeAreaView  style={styles.container}>\r\n      <SearchBars style={styles.SearchBar}/>\r\n      <ScrollView>\r\n        <Text style={styles.title}> Trending</Text>\r\n        <ScrollView horizontal>{Trending}</ScrollView>\r\n        <Text style={styles.title}> Recent</Text>\r\n        <ScrollView horizontal>{Recent}</ScrollView>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}